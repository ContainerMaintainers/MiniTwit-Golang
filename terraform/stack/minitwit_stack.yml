version: "3.8"

networks:
  main:
    name: minitwit-network

services:
  postgres:
    container_name: minitwit-postgres
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=minitwitdb
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d minitwitdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - main
    deploy:
      update_config:
        order: start-first
      replicas: 1
      # placement:
      #   constraints:
      #     - "node.hostname==dbserver"

  web:
    image: containermaintainers/minitwit
    container_name: minitwit
    depends_on:
      - postgres
      - grafana
      - prometheus
    ports:
      - '8080:8080'
    restart: always
    environment:
      - DB_NAME=minitwitdb
      - DB_PORT=5432
      - DB_PASSWORD=admin
      - DB_USER=admin
      - DB_HOST=postgres
      - PORT=8080
      - SESSION_KEY=session123
      - GIN_MODE=debug
    links:
      - postgres:database
    networks:
      - main
    deploy:
      replicas: 9
      # placement:
      #   constraints:
      #   - "node.hostname!=dbserver"

  loadbalancer:
    image: nginx
    ports:
      - '80:80'
    volumes:
      - /loadbalancer:/etc/nginx/conf.d
    deploy:
      replicas: 2

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9090:9090"
    networks:
      - main
    user: root
    deploy:
      replicas: 1


  grafana:
    image: grafana/grafana:4.5.2
    ports:
      - "3000:3000"  
    networks:
      - main
    deploy:
      replicas: 1