version: "3.8"

networks:
  main:
    name: minitwit-network

services:
  postgres:
    container_name: minitwit-postgres
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d minitwitdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - main

  web:
    image: minitwit-webapp
    container_name: minitwit
    depends_on:
      postgres:
        condition: service_healthy
      grafana:
        condition: service_started
      prometheus:
        condition: service_started
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        db_user: ${DB_USER}
        db_password: ${DB_PASSWORD}
        db_host: ${DB_HOST}
        db_name: ${DB_NAME}
        db_port: ${DB_PORT}
        port: ${PORT}
        session_key: ${SESSION_KEY}
        gin_mode: ${GIN_MODE}
        BUILDKIT_PROGRESS: plain docker-compose build
    ports:
      - '8080:8080'
    restart: always
    links:
      - postgres:database
    networks:
      - main

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    ports:
      - "9090:9090"
    networks:
      - main


  grafana:
    image: grafana/grafana:4.5.2
    ports:
      - "3000:3000"  
    networks:
      - main