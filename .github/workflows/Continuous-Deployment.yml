name: Minitwit Continuous Deployment

on:
  push:
    branches:
      - feature/docker-swarm

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push minitwitimage
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwit:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwit:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwit:webbuildcache,mode=max

      - name: Create .env
        run: |
          echo "export GIN_MODE=${{ vars.GIN_MODE }}" > .env
          echo "export DB_USER=${{  secrets.DB_USER  }}" > .env
          echo "export DB_PASSWORD=${{  secrets.DB_PASSWORD  }}" > .env
          echo "export DB_NAME=${{  secrets.DB_NAME  }}" > .env
          echo "export DB_PORT=${{  secrets.DB_PORT  }}" > .env
      
      - name: Create terraform secrets
        run: |
          echo "export TF_VAR_do_token=${{ secrets.do_token }}" > .env
          echo "export SPACE_NAME=${{ secrets.SPACE_NAME }}" > .env
          echo "export STATE_FILE=${{ secrets.STATE_FILE }}" > .env
          echo "export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" > .env
          echo "export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" > .env
      
      - name: DO SSH KEY
        run: |
          mkdir terraform/ssh_key
          echo "${{ secrets.SSH_KEY }}" > terraform/ssh_key/terraform
          echo "${{ secrets.SSH_PUB_KEY }}" > terraform/ssh_key/terraform.pub
          
      - name: Terraform deploy
        uses: hashicorp/setup-terraform@v2.0.3
      
      - run: bash bootstrap_terraform.sh
